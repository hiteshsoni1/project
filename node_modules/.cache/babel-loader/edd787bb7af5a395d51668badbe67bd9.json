{"ast":null,"code":"export const getData = async (search, page) => {\n  let data = [];\n  const url = `https://www.flickr.com/services/rest/?method=flickr.photos.search&per_page=25&api_key=506e716ab594396861cd8e374cf41d89&text=${search}&page=${page}&format=json&nojsoncallback=1`;\n  await fetch(url).then(response => response.json()).then(value => {\n    if ('photos' in value) {\n      data = value.photos.photo;\n    }\n  });\n  return data;\n};\nexport const saveSearch = search => {\n  var _localStorage$getItem;\n\n  const searchQueries = ((_localStorage$getItem = localStorage.getItem('search')) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : '').split(',');\n\n  if (!searchQueries.includes(search)) {\n    localStorage.setItem('search', searchQueries.join(',').concat(`,${search}`));\n  }\n};","map":{"version":3,"sources":["/home/soni/project/src/service.js"],"names":["getData","search","page","data","url","fetch","then","response","json","value","photos","photo","saveSearch","searchQueries","localStorage","getItem","split","includes","setItem","join","concat"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,OAAOC,MAAP,EAAcC,IAAd,KAAuB;AAC1C,MAAIC,IAAI,GAAG,EAAX;AACA,QAAMC,GAAG,GAAI,+HAA8HH,MAAO,SAAQC,IAAK,+BAA/J;AACA,QAAMG,KAAK,CAACD,GAAD,CAAL,CACLE,IADK,CACCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADd,EAELF,IAFK,CAEAG,KAAK,IAAI;AACb,QAAG,YAAYA,KAAf,EAAsB;AACpBN,MAAAA,IAAI,GAAGM,KAAK,CAACC,MAAN,CAAaC,KAApB;AACD;AACF,GANK,CAAN;AAOA,SAAOR,IAAP;AACD,CAXI;AAaP,OAAO,MAAMS,UAAU,GAAIX,MAAD,IAAY;AAAA;;AAClC,QAAMY,aAAa,GAAG,0BAACC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAD,yEAAmC,EAAnC,EAAuCC,KAAvC,CAA6C,GAA7C,CAAtB;;AACA,MAAG,CAACH,aAAa,CAACI,QAAd,CAAuBhB,MAAvB,CAAJ,EAAoC;AAChCa,IAAAA,YAAY,CAACI,OAAb,CAAqB,QAArB,EAA8BL,aAAa,CAACM,IAAd,CAAmB,GAAnB,EAAwBC,MAAxB,CAAgC,IAAGnB,MAAO,EAA1C,CAA9B;AACD;AACN,CALM","sourcesContent":["export const getData = async (search,page) => {\n    let data = [];\n    const url = `https://www.flickr.com/services/rest/?method=flickr.photos.search&per_page=25&api_key=506e716ab594396861cd8e374cf41d89&text=${search}&page=${page}&format=json&nojsoncallback=1`;\n    await fetch(url)\n    .then((response) => response.json())\n    .then(value => {\n      if('photos' in value) {\n        data = value.photos.photo;\n      }\n    })\n    return data;\n  }\n\nexport const saveSearch = (search) => {\n    const searchQueries = (localStorage.getItem('search') ?? '').split(',');\n    if(!searchQueries.includes(search)) {\n        localStorage.setItem('search',searchQueries.join(',').concat(`,${search}`))\n      }\n}"]},"metadata":{},"sourceType":"module"}