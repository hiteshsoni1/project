{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { GridListTile, GridListTileBar, makeStyles } from '@material-ui/core';\nimport ImageModal from './ImageModal';\nimport _ from 'lodash';\nimport './body.css';\n\nclass Body extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n} // const handleClick = (setOpen,url,title,setModal) => {\n//     setOpen(true);\n//     setModal({url:url,title:title})\n// }\n// const getData = (search,setData,data,page) => {\n//   const url = `https://www.flickr.com/services/rest/?method=flickr.photos.search&per_page=25&api_key=506e716ab594396861cd8e374cf41d89&text=${search}&page=${page}&format=json&nojsoncallback=1`;\n//   fetch(url)\n//   .then((response) => response.json())\n//   .then(value => {\n//     if('photos' in value) {\n//     setData([...data,...value.photos.photo])\n//       console.log(url,page);\n//   }\n//   })\n//   console.log(search);\n// }\n// var debouneGetData;\n// const useStyles = makeStyles({\n//     root: {\n//         position: 'fixed',\n//         alignSelf:'center',\n//         top: '20%',\n//         left: '30%',\n//     },\n//   });\n// function Body(props) {\n//     const [open,setOpen] = useState(false);\n//     const [modal,setModal] = useState({});\n//     const [data,setData] = useState([]);\n//     const [page,setPage] = useState(1);\n//     const classes = useStyles(props);\n//     useEffect(() => {\n//       debouneGetData = _.debounce(getData,2000);\n//       window.addEventListener(\"scroll\", handleScroll, false)\n//       console.log('listner',page)\n//       return (()=> {console.log('we unmount')});\n//         window.removeEventListener(\"scroll\",handleScroll);\n//     },[]);\n//     useEffect(() => {\n//       debouneGetData(props.query,setData,data,page);\n//       console.log('changes')\n//     },[props.query,page])\n//     const handleScroll = () => {\n//       let element = document.getElementById('photos');\n//       console.log(window.scrollY, window.innerHeight, element.clientHeight, element.offsetTop)\n//       if (window.scrollY + window.innerHeight > element.clientHeight + element.offsetTop) {\n//         setPage( page => page + 1 );\n//         console.log('scroll',data);\n//       }\n//     }\n// return (\n//     <div className=\"photos\" id='photos'  >      \n//       {data.map(val => {\n//           let url = `https://farm${val.farm}.staticflickr.com/${val.server}/${val.id}_${val.secret}.jpg`;\n//           return(\n//           <img src={url} className=\"list_image\" key={val.id} onClick={() => handleClick(setOpen,url,val.title,setModal)}/>\n//       )})}\n//     <ImageModal image={modal} open={open} setOpen={setOpen}/>\n// </div>\n// );\n// }\n\n\nexport default Body;","map":{"version":3,"sources":["/home/soni/project/src/body.js"],"names":["React","useState","useEffect","GridListTile","GridListTileBar","makeStyles","ImageModal","_","Body","Component","constructor","props"],"mappings":"AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAQC,YAAR,EAAqBC,eAArB,EAAqCC,UAArC,QAAsD,mBAAtD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,YAAP;;AAIA,MAAMC,IAAN,SAAmBR,KAAK,CAACS,SAAzB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAH+B,C,CAMlC;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;;;AAEA,eAAeH,IAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport {GridListTile,GridListTileBar,makeStyles} from '@material-ui/core'\nimport ImageModal from './ImageModal'\nimport _ from 'lodash';\nimport './body.css';\n\n\n\nclass Body extends React.Component{\n  constructor(props) {\n    super(props)\n  }\n}\n\n// const handleClick = (setOpen,url,title,setModal) => {\n//     setOpen(true);\n//     setModal({url:url,title:title})\n// }\n\n\n// const getData = (search,setData,data,page) => {\n//   const url = `https://www.flickr.com/services/rest/?method=flickr.photos.search&per_page=25&api_key=506e716ab594396861cd8e374cf41d89&text=${search}&page=${page}&format=json&nojsoncallback=1`;\n//   fetch(url)\n//   .then((response) => response.json())\n//   .then(value => {\n//     if('photos' in value) {\n//     setData([...data,...value.photos.photo])\n//       console.log(url,page);\n//   }\n//   })\n//   console.log(search);\n// }\n\n// var debouneGetData;\n\n// const useStyles = makeStyles({\n//     root: {\n//         position: 'fixed',\n//         alignSelf:'center',\n//         top: '20%',\n//         left: '30%',\n//     },\n//   });\n\n// function Body(props) {\n//     const [open,setOpen] = useState(false);\n//     const [modal,setModal] = useState({});\n//     const [data,setData] = useState([]);\n//     const [page,setPage] = useState(1);\n\n//     const classes = useStyles(props);\n\n//     useEffect(() => {\n//       debouneGetData = _.debounce(getData,2000);\n//       window.addEventListener(\"scroll\", handleScroll, false)\n//       console.log('listner',page)\n//       return (()=> {console.log('we unmount')});\n//         window.removeEventListener(\"scroll\",handleScroll);\n//     },[]);\n\n//     useEffect(() => {\n//       debouneGetData(props.query,setData,data,page);\n//       console.log('changes')\n//     },[props.query,page])\n\n      \n//     const handleScroll = () => {\n//       let element = document.getElementById('photos');\n//       console.log(window.scrollY, window.innerHeight, element.clientHeight, element.offsetTop)\n//       if (window.scrollY + window.innerHeight > element.clientHeight + element.offsetTop) {\n//         setPage( page => page + 1 );\n//         console.log('scroll',data);\n//       }\n//     }\n\n\n  // return (\n  //     <div className=\"photos\" id='photos'  >      \n  //       {data.map(val => {\n  //           let url = `https://farm${val.farm}.staticflickr.com/${val.server}/${val.id}_${val.secret}.jpg`;\n  //           return(\n  //           <img src={url} className=\"list_image\" key={val.id} onClick={() => handleClick(setOpen,url,val.title,setModal)}/>\n  //       )})}\n  //     <ImageModal image={modal} open={open} setOpen={setOpen}/>\n  // </div>\n  // );\n// }\n\nexport default Body;\n"]},"metadata":{},"sourceType":"module"}