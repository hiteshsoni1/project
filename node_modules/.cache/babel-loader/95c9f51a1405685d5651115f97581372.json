{"ast":null,"code":"var _jsxFileName = \"/home/soni/project/src/Header.js\";\nimport React from 'react';\nimport { Autocomplete } from '@material-ui/lab';\nimport { TextField, makeStyles } from '@material-ui/core';\nimport './Header.css';\nconst useStyles = makeStyles({\n  root: {\n    width: '300px'\n  }\n});\n\nfunction Header(props) {\n  const query = localStorage.getItem('search').split(',');\n  let classes = useStyles(props);\n  return React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    className: classes.root,\n    freeSolo: true,\n    id: \"free-solo-2-demo\",\n    disableClearable: true,\n    onInputChange: (e, value) => props.setQuery(value),\n    options: query.map(option => option),\n    renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search image\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      onChange: e => {\n        console.log(e);\n        props.setQuery(e.target.value);\n      },\n      onKeyPress: e => {\n        if (e.which == 13) {\n          localStorage.setItem('search', query.join(',').concat(`,${e.target.value}`));\n        }\n      },\n      fullWidth: true,\n      InputProps: { ...params.InputProps,\n        type: 'search'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/soni/project/src/Header.js"],"names":["React","Autocomplete","TextField","makeStyles","useStyles","root","width","Header","props","query","localStorage","getItem","split","classes","e","value","setQuery","map","option","params","console","log","target","which","setItem","join","concat","InputProps","type"],"mappings":";AAAA,OAAOA,KAAP,MAAqB,OAArB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AACA,SAAQC,SAAR,EAAkBC,UAAlB,QAAmC,mBAAnC;AACA,OAAO,cAAP;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AACzBE,EAAAA,IAAI,EAAE;AACHC,IAAAA,KAAK,EAAC;AADH;AADmB,CAAD,CAA5B;;AAMA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,KAA/B,CAAqC,GAArC,CAAd;AACA,MAAIC,OAAO,GAAGT,SAAS,CAACI,KAAD,CAAvB;AACF,SACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACI,IAAA,SAAS,EAAEK,OAAO,CAACR,IADvB;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,EAAE,EAAC,kBAHP;AAII,IAAA,gBAAgB,MAJpB;AAKI,IAAA,aAAa,EAAI,CAACS,CAAD,EAAGC,KAAH,KAAaP,KAAK,CAACQ,QAAN,CAAeD,KAAf,CALlC;AAMI,IAAA,OAAO,EAAEN,KAAK,CAACQ,GAAN,CAAUC,MAAM,IAAIA,MAApB,CANb;AAOI,IAAA,WAAW,EAAEC,MAAM,IACjB,oBAAC,SAAD,oBACMA,MADN;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,OAAO,EAAC,UAJV;AAKE,MAAA,QAAQ,EAAML,CAAD,IAAO;AAACM,QAAAA,OAAO,CAACC,GAAR,CAAYP,CAAZ;AAAeN,QAAAA,KAAK,CAACQ,QAAN,CAAeF,CAAC,CAACQ,MAAF,CAASP,KAAxB;AAA+B,OALrE;AAME,MAAA,UAAU,EAAGD,CAAD,IAAM;AAAC,YAAGA,CAAC,CAACS,KAAF,IAAS,EAAZ,EAAgB;AAACb,UAAAA,YAAY,CAACc,OAAb,CAAqB,QAArB,EAA8Bf,KAAK,CAACgB,IAAN,CAAW,GAAX,EAAgBC,MAAhB,CAAwB,IAAGZ,CAAC,CAACQ,MAAF,CAASP,KAAM,EAA1C,CAA9B;AAA4E;AAAC,OANnH;AAOE,MAAA,SAAS,MAPX;AAQE,MAAA,UAAU,EAAE,EAAE,GAAGI,MAAM,CAACQ,UAAZ;AAAwBC,QAAAA,IAAI,EAAE;AAA9B,OARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA;AAwBD;;AAED,eAAerB,MAAf","sourcesContent":["import React,{} from 'react';\nimport {Autocomplete} from '@material-ui/lab'\nimport {TextField,makeStyles} from '@material-ui/core'\nimport './Header.css';\n\nconst useStyles = makeStyles({\n    root: {\n       width:'300px',\n       \n    },\n  });\nfunction Header(props) {\n    const query = localStorage.getItem('search').split(',');\n    let classes = useStyles(props);\n  return (\n  <div className='header'>\n    <Autocomplete\n        className={classes.root}\n        freeSolo\n        id=\"free-solo-2-demo\"\n        disableClearable\n        onInputChange = {(e,value) => props.setQuery(value)}\n        options={query.map(option => option)}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label=\"Search image\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange = { (e) => {console.log(e);props.setQuery(e.target.value)}}\n            onKeyPress={(e)=> {if(e.which==13) {localStorage.setItem('search',query.join(',').concat(`,${e.target.value}`))}}}\n            fullWidth\n            InputProps={{ ...params.InputProps, type: 'search' }}\n          />\n        )}\n      />\n  </div>\n  );\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}