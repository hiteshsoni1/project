{"ast":null,"code":"var _jsxFileName = \"/home/soni/project/src/Header.js\";\nimport React from 'react';\nimport { Autocomplete } from '@material-ui/lab';\nimport { TextField, makeStyles } from '@material-ui/core';\nimport './Header.css';\nconst useStyles = makeStyles({\n  root: {\n    width: '300px',\n    backgroundColor: 'white'\n  },\n  text: {\n    margin: '0px'\n  }\n});\n\nfunction Header(props) {\n  var _localStorage$getItem;\n\n  const searchQueries = ((_localStorage$getItem = localStorage.getItem('search')) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : '').split(',');\n  let classes = useStyles(props);\n\n  const saveSearchQuery = e => {\n    let search = e.target.value;\n\n    if (13 == e.which && !searchQueries.includes(search)) {\n      localStorage.setItem('search', searchQueries.join(',').concat(`,${search}`));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Search Ptotos\"), React.createElement(Autocomplete, {\n    className: classes.root,\n    freeSolo: true,\n    disableClearable: true,\n    onInputChange: (e, value) => props.setQuery(value),\n    options: searchQueries.map(option => option),\n    renderInput: params => React.createElement(TextField, Object.assign({\n      className: classes.text\n    }, params, {\n      margin: \"normal\",\n      onChange: e => props.setQuery(e.target.value),\n      onKeyPress: e => saveSearchQuery(e),\n      fullWidth: true,\n      InputProps: { ...params.InputProps,\n        type: 'search'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })));\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/soni/project/src/Header.js"],"names":["React","Autocomplete","TextField","makeStyles","useStyles","root","width","backgroundColor","text","margin","Header","props","searchQueries","localStorage","getItem","split","classes","saveSearchQuery","e","search","target","value","which","includes","setItem","join","concat","setQuery","map","option","params","InputProps","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AACA,SAAQC,SAAR,EAAkBC,UAAlB,QAAmC,mBAAnC;AACA,OAAO,cAAP;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AACzBE,EAAAA,IAAI,EAAE;AACHC,IAAAA,KAAK,EAAC,OADH;AAEHC,IAAAA,eAAe,EAAC;AAFb,GADmB;AAKzBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAC;AADL;AALmB,CAAD,CAA5B;;AAUA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACnB,QAAMC,aAAa,GAAG,0BAACC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAD,yEAAmC,EAAnC,EAAuCC,KAAvC,CAA6C,GAA7C,CAAtB;AACA,MAAIC,OAAO,GAAGZ,SAAS,CAACO,KAAD,CAAvB;;AAEA,QAAMM,eAAe,GAAIC,CAAD,IAAO;AAC7B,QAAIC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAtB;;AACA,QAAG,MAAMH,CAAC,CAACI,KAAR,IAAiB,CAACV,aAAa,CAACW,QAAd,CAAuBJ,MAAvB,CAArB,EAAqD;AACnDN,MAAAA,YAAY,CAACW,OAAb,CAAqB,QAArB,EAA8BZ,aAAa,CAACa,IAAd,CAAmB,GAAnB,EAAwBC,MAAxB,CAAgC,IAAGP,MAAO,EAA1C,CAA9B;AACD;AACF,GALD;;AAMF,SACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEF,oBAAC,YAAD;AACI,IAAA,SAAS,EAAEH,OAAO,CAACX,IADvB;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,gBAAgB,MAHpB;AAII,IAAA,aAAa,EAAI,CAACa,CAAD,EAAGG,KAAH,KAAaV,KAAK,CAACgB,QAAN,CAAeN,KAAf,CAJlC;AAKI,IAAA,OAAO,EAAET,aAAa,CAACgB,GAAd,CAAkBC,MAAM,IAAIA,MAA5B,CALb;AAMI,IAAA,WAAW,EAAEC,MAAM,IACjB,oBAAC,SAAD;AACA,MAAA,SAAS,EAAEd,OAAO,CAACR;AADnB,OAEMsB,MAFN;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,QAAQ,EAAMZ,CAAD,IAAOP,KAAK,CAACgB,QAAN,CAAeT,CAAC,CAACE,MAAF,CAASC,KAAxB,CAJtB;AAKE,MAAA,UAAU,EAAGH,CAAD,IAAMD,eAAe,CAACC,CAAD,CALnC;AAME,MAAA,SAAS,MANX;AAOE,MAAA,UAAU,EAAE,EAAE,GAAGY,MAAM,CAACC,UAAZ;AAAwBC,QAAAA,IAAI,EAAE;AAA9B,OAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFE,CADJ,CADA;AAyBD;;AAED,eAAetB,MAAf","sourcesContent":["import React from 'react';\nimport {Autocomplete} from '@material-ui/lab'\nimport {TextField,makeStyles} from '@material-ui/core'\nimport './Header.css';\n\nconst useStyles = makeStyles({\n    root: {\n       width:'300px',\n       backgroundColor:'white',\n    },\n    text: {\n        margin:'0px'\n    }\n});\n\nfunction Header(props) {\n    const searchQueries = (localStorage.getItem('search') ?? '').split(',');\n    let classes = useStyles(props);\n\n    const saveSearchQuery = (e) => {\n      let search = e.target.value;\n      if(13 == e.which && !searchQueries.includes(search)) {\n        localStorage.setItem('search',searchQueries.join(',').concat(`,${search}`))\n      }\n    }\n  return (\n  <div className='header'>\n      <div className='search'>\n          <span className='span'>Search Ptotos</span>\n    <Autocomplete\n        className={classes.root}\n        freeSolo\n        disableClearable\n        onInputChange = {(e,value) => props.setQuery(value)}\n        options={searchQueries.map(option => option)}\n        renderInput={params => (\n          <TextField\n          className={classes.text}\n            {...params}\n            margin=\"normal\"\n            onChange = { (e) => props.setQuery(e.target.value)}\n            onKeyPress={(e)=> saveSearchQuery(e)}\n            fullWidth\n            InputProps={{ ...params.InputProps, type: 'search' }}\n          />\n        )}\n      />\n      </div>\n  </div>\n  );\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}